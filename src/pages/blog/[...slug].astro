---
import "katex/dist/katex.min.css";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import MarkdownBody from "@/components/MarkdownBody.astro";
import PostMeta from "@/components/PostMeta.astro";
import PostNavLinks from "@/components/PostNavLinks.astro";
import Figure from "@/components/markdown/Figure.astro";
import Tboc from "@/components/widget/Tboc.astro";
import MainGridLayout from "@/layouts/MainGridLayout.astro";
import { getSortedBlogs } from "@/utils/content-utils";

interface Props {
  entry: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blogEntries = await getSortedBlogs();
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry }
  }));
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();
const {
  data: { title, pubDate, category, tags, description }
} = entry;
const blogOgp = entry.data.ogp ||`/api/og/${entry.slug}.png`;
---
<MainGridLayout
  pageTitle={title}
  description={description}
  blogOgp={blogOgp}
  omitBackgroundHeading=true
  >
  <div class="article card-base">
    <header class="header">
      <h1 class="title">{title}</h1>
      <PostMeta date={pubDate} category={category} tags={tags} />
      {entry.data.image ? (
        <div class="header__image">
          <Image src={entry.data.image} alt={title} />
        </div>
      ) : (
        <div class="header__dot"></div>
      )}
    </header>
    <Tboc headings={headings} />
    <MarkdownBody>
      <Content components={{ img: Figure }} />
    </MarkdownBody>
  </div>
  <PostNavLinks entry={entry} />
</MainGridLayout>

<style lang="scss">
  .article {
    padding: 1.5rem 1rem;
  }
  .header {
    margin-bottom: 2rem;
    &__image {
      border-radius: 0.75rem;
      overflow: hidden;
      margin-inline: 1rem;
      margin-top: 1.5rem;
    }
    &__dot {
      height: 2px;
      margin-top: 1.5rem;
      margin-inline: 1rem;
      background-image: radial-gradient(circle,#0000001a 1px,transparent 1px);
      background-position: left top;
      background-repeat: repeat-x;
      background-size: 10px 2px;
    }
  }
  .title {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 0.75rem;
    &::before {
      content: '';
      width: 0.25rem;
      height: 1.2rem;
      background: var(--primary);
      border-radius: 0.375rem;
    }
  }
</style>