---
import SearchModal from "@/components/SearchModal.astro";
import { Icon } from "astro-icon/components";
---
<button class="search__btn">
  <span class="search__text for-large">âŒ˜ + K</span>
  <Icon name="material-symbols:search-rounded" class="search__icon" />
</button>
<dialog class="search__modal">
  <div class="search__container">
    <div class="search__overlay"></div>
    <SearchModal />
  </div>
</dialog>

<style lang="scss">
  .search {
    &__btn {
      margin-left: auto;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.5rem 0.75rem;
      border-radius: 0.5rem;
      cursor: pointer;
      @include mixin.large {
        margin-right: 1rem;
        background: rgba(0, 0, 0, 0.04);
        color: var(--text-light);
      }
      @include mixin.mobile {
        color: var(--text-color);
      }
      @include mixin.hover {
        background: var(--btn-plain-bg-hover);
      }
    }
    &__text {
      font-size: 0.875rem;
    }
    &__icon {
      font-size: 1.25rem;
    }
    &__modal {
      &::backdrop {
        display: none;
      }
    }
    &__container {
      width: 100vw;
      height: 100vh;
      position: fixed;
      top: 0;
      left: 0;
      padding: 10vh;
      overflow: auto;
      @include mixin.mobile {
        padding: 2rem 1rem;
      }
    }
    &__overlay {
      width: 100vw;
      height: 100vh;
      position: fixed;
      top: 0;
      left: 0;
      background: #16181da8;
      backdrop-filter: blur(0.25rem);
      z-index: -1;
    }
  }
</style>

<script>
  const searchBtn = document.querySelector('.search__btn') as HTMLButtonElement;
  const searchModal = document.querySelector('.search__modal') as HTMLDialogElement;
  const overlay = document.querySelector('.search__overlay') as HTMLDivElement;
  const body = document.body;

  const openModal = () => {
    searchModal.showModal();
    body.style.overflow = 'hidden';
  }

  const closeModal = () => {
    searchModal.close();
    body.style.overflow = 'auto';
  }

  searchBtn.addEventListener('click', openModal);

  overlay.addEventListener('click', (event) => {
    if (event.target === overlay) {
      closeModal();
    }
  })

  searchModal.addEventListener('close', (event) => {
    event.stopPropagation();
  })

  window.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && body.style.overflow === 'hidden') {
      closeModal();
    }
    if (e.key === 'k' && e.metaKey) {
      openModal();
    }
  })
</script>