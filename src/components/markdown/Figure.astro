---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import { CldImage } from 'astro-cloudinary';
import { CldVideoPlayer } from 'astro-cloudinary';

interface Props {
  title: string;
  src: ImageMetadata | string;
  alt: string;
};

const { title, src, alt } = Astro.props;
const cloudName = import.meta.env.PUBLIC_CLOUDINARY_CLOUD_NAME;

const isStringSrc = typeof src === 'string';
const isCloudinaryImage = isStringSrc && src.startsWith(`https://res.cloudinary.com/${cloudName}/image/`);
const isCloudinaryVideo = isStringSrc && src.startsWith(`https://res.cloudinary.com/${cloudName}/video/`);
---

<figure class="figure">
  <div class="figure__img">
    { isCloudinaryVideo ? (
      <CldVideoPlayer src={src as string} width="1200" height="675" />
    ) : isCloudinaryImage ? (
      <CldImage src={src as string} alt={alt} width={1200} height={675} />
    ) : (
      <Image src={src as ImageMetadata} alt={alt} width="1200" height="675" />
    )
    }
  </div>
  { title && (
    <figcaption class="figcaption">
      <Fragment set:html={title} />
    </figcaption>
  )}
</figure>

<style lang="scss">
  .figure {
    max-width: 800px;
    margin-inline: auto;
    --stack-space: 2rem;
    &__img {
      border-radius: 0.5rem;
      overflow: hidden;
      img {
        aspect-ratio: auto !important;
      }
    }
  }
  .figcaption {
    margin-top: 0.5rem;
    text-align: center;
    font-size: 0.875rem;
  }
</style>